"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const PassiveFileSystem_1 = require("../file-system/PassiveFileSystem");
const forwardSlash_1 = __importDefault(require("../../utils/path/forwardSlash"));
const RealFileSystem_1 = require("../file-system/RealFileSystem");
const MemFileSystem_1 = require("../file-system/MemFileSystem");
function createControlledTypeScriptSystem(typescript, mode = 'readonly') {
    let artifacts = {
        files: [],
        dirs: [],
        excluded: [],
        extensions: [],
    };
    let isInitialRun = true;
    // watchers
    const fileWatcherCallbacksMap = new Map();
    const directoryWatcherCallbacksMap = 